@startuml Payment Flow. Payment Initialization

title Payment Flow Init Internal PaymentCheckout 

actor Customer as customer #fad7a0

box #E4E0E1
    participant "Storefront" as storefront #FFF1DB
    participant "Order Service" as order_service #77CDFF
    database "order" as order #77CDFF
    participant "Product Service" as product_service #77CDFF
    queue "Order.Events.Topic" as order_topic #77CDFF
'    entity "Checkout Payment" as checkout_payment #73c6b6
'    queue "Payment.Events.Topic" as payment_topic #73c6b6
'    participant "Notification Service" as notification_service #fad7a0
end box

box #eafaf1
    participant "Inventory Service" as inventory_service #8af1f0
    participant "Promotion Service" as promotion_service #8af1f0
    participant "Delivery Service" as delivery_service #8af1f0
    participant "Customer Service" as customer_service #8af1f0
end box

box #F4D9D0
    participant "Payment Service" as payment_service #73c6b6
end box

box #F3EEEA
    participant "Shipmen Providers" as shipment_provider #73c6b6
    participant "Payment Provider" as payment_provider #73c6b6
end box


customer -> storefront: Proceed to payment
activate storefront #FFF
  storefront -> order_service: POST /order/checkouts/{checkout_id}/process-payment
  activate order_service #77CDFF
    order_service -> order: Find by {checkout_id}
    activate order
        order --> order_service: Checkout{...}
    deactivate

    'Product integration'
'    order_service -> product_service: Find product items {product_ids}
'    activate product_service
'        product_service --> order_service: Product[...]
'    deactivate

    ||50||

    order_service -> inventory_service: Get products inventory info {product_ids}
    activate inventory_service
        inventory_service --> order_service: ProductInventory[...]
    deactivate

    alt #pink Products out of stock
        order_service -> order: Update Checkout status
        activate order
            order --> order_service
        deactivate
        storefront <-- order_service: 400 BAD REQUEST
        ||10||
    end

    ||50||
    order_service -> promotion_service: Get promotion {promotion_code}
    activate promotion_service
        promotion_service --> order_service: Promotion[...]
    deactivate

    alt #pink Promotion is Invalid
        order_service -> order: Update Checkout status
        activate order
            order --> order_service
        deactivate
        storefront <-- order_service: 400 BAD REQUEST
        ||10||
    end

    ||50||
    group Delivery
      order_service -> delivery_service: Get delivery fee {shipping_address_id}
      activate delivery_service
        note left: optional
        delivery_service -> customer_service: Get Address {addressId}
        activate customer_service
            customer_service -> delivery_service: Address{...}
        deactivate customer_service
        ||20||
        delivery_service -> shipment_provider: Get Shipping Fee {address_info}
        activate shipment_provider
            shipment_provider -> delivery_service: ShippingFee{...}
        deactivate shipment_provider

        delivery_service --> order_service: DeliveryInfo[...]
      deactivate delivery_service

      alt #pink Product Quantity Invalid
        order_service -> order: Update Checkout status
        activate order
            order --> order_service
        deactivate order
        storefront <-- order_service: 400 BAD REQUEST
        ||10||
      end
      ||10||
    end

    ||50||
    group #AFC8AD Update Checkout & Create Order:
        order_service -> order: Update Checkout status
        activate order
            order --> order_service
        deactivate order

        order_service -> order: Create Order
        activate order
            order --> order_service
        deactivate order
        ||10||
    end

    alt #pink Failed
        storefront <-- order_service: 400 BAD REQUEST
        ||10||
    end

    ||50||
    order_service -> payment_service: Capture payment {payment_info}
    activate payment_service
        payment_service --> order_service: CapturePaymentInfo[redirectUrl, returnUrl, cancelUrl, etc.]
    deactivate payment_service
        payment_service -> payment_provider: Proceed to payment
        activate payment_provider
            payment_provider --> payment_service: PaymentResultInfo{redirectUrl, }
        deactivate payment_provider
    alt Capture Payment successfully
        ||20||
        order_service --> storefront: CapturePaymentInfo[redirectUrl, etc.]
        storefront -> payment_provider: Redirect to PaymentProvider
        activate payment_provider
        deactivate payment_provider
    else #pink Process Payment failed
        order_service -> order: Update Checkout status
        activate order
            order --> order_service
        deactivate order
        storefront <-- order_service: 400 BAD REQUEST
        ||10||
    end

    ||50||

    order_service -> order_topic: Publish order creation message
    storefront <-- order_service: 202 ACCEPTED
    activate order_topic
        order_topic -> inventory_service: Update Inventory
        activate inventory_service
        deactivate inventory_service
        ||10||
        order_topic -> promotion_service: Update Promotion
        activate promotion_service
        deactivate promotion_service
        ||10||
        order_topic -> delivery_service: Create Order Delivery
        activate delivery_service
        deactivate delivery_service
        ||10||
    deactivate order_topic
  deactivate order_service
deactivate storefront
@enduml