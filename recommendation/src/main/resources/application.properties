server.port=8095
server.servlet.context-path=/recommendation
spring.application.name=recommendation
spring.threads.virtual.enabled=true
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
yas.services.product=http://api.yas.local/product
yas.services.customer=http://api.yas.local/customer
yas.services.order=http://api.yas.local/order
# DB Config
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/recommendation
spring.datasource.username=admin
spring.datasource.password=admin
# PGVector Configuration
spring.ai.vectorstore.pgvector.initialize-schema=true
spring.ai.vectorstore.pgvector.dimensions=1536
spring.ai.vectorstore.pgvector.index-type=HNSW
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
# Azure AI configuration
spring.ai.azure.openai.api-key=afd12e7899d64033923e743410d5112d
spring.ai.azure.openai.endpoint=https://product-recommendation.openai.azure.com
spring.ai.azure.openai.embedding.options.model=text-embedding-3-small
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=create
#Enable liquibase
spring.liquibase.enabled=true
# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui
springdoc.packagesToScan=com.yas.recommendation
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.client-id=swagger-ui


